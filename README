<p>&lt;!doctype html&gt;
&lt;html lang=&quot;en&quot;&gt;
&lt;head&gt;
&lt;meta charset=&quot;UTF-8&quot;&gt;
&lt;title&gt;vue.js&lt;/title&gt;
&lt;meta name=&quot;Generator&quot; content=&quot;EditPlus®&quot;&gt;
&lt;meta name=&quot;Author&quot; content=&quot;&quot;&gt;
&lt;meta name=&quot;Keywords&quot; content=&quot;&quot;&gt;
&lt;meta name=&quot;Description&quot; content=&quot;&quot;&gt;
&lt;script src=&quot;vue.js&quot;&gt;&lt;/script&gt;
&lt;/head&gt;
&lt;body&gt;
&lt;div id='app'&gt;
&lt;h1&gt;{{ 10 + 20 }}&lt;/h1&gt;
&lt;div v-bind:id=' &quot;a&quot; + &quot;b&quot; + &quot;c2&quot; ' &gt;11&lt;/div&gt;
&lt;h1&gt;{{ title }}&lt;/h1&gt;
&lt;div&gt;
&lt;h1&gt;html content&lt;/h1&gt;
&lt;p&gt;{{ myhtml }}&lt;/p&gt;
&lt;p v-html='myhtml'&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p v-on:click='incre'&gt;{{ inc }}&lt;/p&gt;
&lt;p v-bind:id='dynamicId'&gt;aa&lt;/p&gt;
&lt;button v-on:click='say'&gt; USE &lt;/button&gt;
&lt;button v-on:click='say' v-bind:disabled='disabled'&gt; USE &lt;/button&gt;
&lt;div&gt;
&lt;p v-if='seen'&gt;看不见&lt;/p&gt;
&lt;button v-on:click='changeSeen( true )'&gt;see&lt;/button&gt;
&lt;button v-on:click='changeSeen( false )'&gt;not see&lt;/button&gt;
&lt;/div&gt;</p>
<pre><code>	&lt;div&gt;
		&lt;input type='text' v-model='url' /&gt;
		&lt;h1&gt;{{ url }}&lt;/h1&gt;
		&lt;a v-bind:href='url'&gt;链接&lt;/a&gt;
	&lt;/div&gt;

	&lt;div&gt;
		&lt;!--
			修饰符 (Modifiers) 是以半角句号 . 指明的特殊后缀，
			用于指出一个指令应该以特殊方式绑定。
			例如，.prevent 修饰符告诉 v-on 指令对于触发的事件
			调用 event.preventDefault();
		--&gt;
		&lt;form v-on:submit.prevent='onSubmit' target=&quot;_blank&quot; action='http://www.baidu.com'&gt;
			&lt;button &gt;提交&lt;/button&gt;
		&lt;/form&gt;
	&lt;/div&gt;
&lt;/div&gt;
&lt;script &gt;
	var aa = 'aaa我怕';
	var data = {
		title: 'haha--haha',
		inc: 0,
		myhtml: '&lt;p style=&quot;color: blue;&quot;&gt;blue&lt;/p&gt;',
		myhtml2: '&lt;p style=&quot;color: blue;&quot;&gt;blue&lt;/p&gt;',
		dynamicId: 'abc',
		id: 'abc',
		disabled: true,
		say: function() {
			console.log( 'say....' );
		},
		changeSeen: function( seen ) {
			this.seen = seen;	
		},
		seen: false,
		url: 'http://www.baidu.com'
	};
	// Object.freeze( data );

	// 创建Vue实例
	var app = new Vue({
	  	el: '#app',
	  	data: data,
		methods: {
			incre: function() {
				this.inc+=1;
			},
			onSubmit: function() {
				// do something
			}
		},
		// 生命周期钩子
		created: function() {
			console.log( 'created生命周期钩子' );
		},
	});
	app.$watch('inc', function(newValue, oldValue) { // 监听变量值更改
		console.log( newValue + '更改为' + oldValue );
	});


	//************* 使用setter 和 getter进行双向绑定
	var obj = {
		title : 'aa'
	};
	Object.defineProperty( obj, 'title', {
		// 当前环境为 obj
		set: function( value )
		{
			console.log( '设置新的值：' + value );
			title = value;
		},
		get: function() 
		{
			console.log( '获取值：' + value );
			return title;
		}
	});
	//*************
&lt;/script&gt;
</code></pre>
<p>&lt;/body&gt;
&lt;/html&gt;</p>
halo4
aa
okok
